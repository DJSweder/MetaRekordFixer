name: Build and Release for macOS (TEST)

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-macos-intel:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.x'
          cache: true
          cache-dependency-path: srcguitest/go.sum
      
      - name: Install Fyne CLI
        run: go install fyne.io/tools/cmd/fyne@latest
  
      - name: Install macOS dependencies
        run: |
          echo "Installing Xcode Command Line Tools..."
          sudo xcode-select --install || true
           
      - name: Build and Package Application (Intel)
        env:
          GOARCH: amd64
        run: |
          cd srcguitest
          # Set CGO flags for macOS compatibility
          export CGO_CFLAGS="-mmacosx-version-min=10.12"
          export CGO_LDFLAGS="-mmacosx-version-min=10.12"
          # Build the application using fyne package (creates .app and .dmg)
          fyne package -os darwin -name "GUITest" -icon applogo.png
        
      - name: Manually create DMG and verify build
        run: |
          cd srcguitest
          if [ ! -d "GUITest.app" ]; then
            echo "Build failed: GUITest.app was not created."
            exit 1
          fi
          echo "GUITest.app found. Creating DMG manually..."
          hdiutil create -verbose -volname "GUITest" -srcfolder "GUITest.app" -ov -format UDZO "GUITest.dmg"
      
      - name: Rename Artifacts for Release
        run: |
          cd srcguitest
          mv GUITest.dmg GUITest-1.0.0-darwin-amd64.dmg     

      - name: Upload installer to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd srcguitest
          gh release upload v1.0.0 "GUITest-1.0.0-darwin-amd64.dmg" --clobber

  build-macos-arm:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.x'
          cache: true
          cache-dependency-path: srcguitest/go.sum
      
      - name: Install Fyne CLI
        run: go install fyne.io/tools/cmd/fyne@latest

      - name: Install macOS dependencies
        run: |
         echo "Installing Xcode Command Line Tools..."
         sudo xcode-select --install || true        
      
      - name: Build and Package Application (Apple Silicon)
        env:
          GOARCH: arm64
        run: |
          cd srcguitest
          # Set CGO flags for macOS compatibility
          export CGO_CFLAGS="-mmacosx-version-min=10.12"
          export CGO_LDFLAGS="-mmacosx-version-min=10.12"
          # Build the application using fyne package (creates .app and .dmg)
          fyne package -os darwin -name "GUITest" -icon applogo.png
        
      - name: Manually create DMG and verify build
        run: |
         cd srcguitest
         if [ ! -d "GUITest.app" ]; then
           echo "Build failed: GUITest.app was not created."
           exit 1
          fi
         echo "GUITest.app found. Creating DMG manually..."
         hdiutil create -verbose -volname "GUITest" -srcfolder "GUITest.app" -ov -format UDZO "GUITest.dmg"

      - name: Rename Artifacts for Release
        run: |
          cd srcguitest
          mv GUITest.dmg GUITest-1.0.0-darwin-arm64.dmg

      - name: Upload installer to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd srcguitest
          gh release upload v1.0.0 "GUITest-1.0.0-darwin-arm64.dmg" --clobber
