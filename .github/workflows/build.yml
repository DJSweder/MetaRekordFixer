name: Build and Release

on:
  release:
    types: [created]

jobs:
  build-mac:
    runs-on: macos-latest
    strategy:
      matrix:
        go-arch: [amd64, arm64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build for macOS (${{ matrix.go-arch }})
      env:
        GOOS: darwin
        GOARCH: ${{ matrix.go-arch }}
        CGO_ENABLED: 1
      run: |
        go build -trimpath -ldflags "-w -s" \
        -o "dist/metarekordfixer_mac_${{ matrix.go-arch }}" \
        ./src/

    - name: Create universal binary (Intel + ARM)
      if: matrix.go-arch == 'arm64'
      run: |
        lipo -create -output dist/metarekordfixer_mac_universal \
        dist/metarekordfixer_mac_amd64 \
        dist/metarekordfixer_mac_arm64

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: mac-binaries
        path: dist/metarekordfixer_mac_*

  release:
    needs: build-mac
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: mac-binaries

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/metarekordfixer_mac_*
