name: Build and Release for macOS

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-macos-intel:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.x'
          cache: true
          cache-dependency-path: src/go.sum
      
      - name: Install Fyne CLI
        run: go install fyne.io/tools/cmd/fyne@latest
      
      - name: Download FFmpeg and FFprobe for macOS Intel
        run: |
          mkdir -p tools
          # Ensure 7-Zip is available
          brew install --quiet p7zip
          
          # Download FFmpeg binary (works on both Intel and ARM via Rosetta)
          curl -L -o ffmpeg.7z https://evermeet.cx/ffmpeg/getrelease/7z
          # Extract FFmpeg (-y = assume Yes, -aoa = overwrite all)
          7z x ffmpeg.7z -otools/ -y -aoa
          
          # Download FFprobe binary separately
          curl -L -o ffprobe.7z https://evermeet.cx/ffmpeg/getrelease/ffprobe
          # Extract FFprobe (-y = assume Yes, -aoa = overwrite all)  
          7z x ffprobe.7z -otools/ -y -aoa
          
          # Set executable permissions only for files that exist
          [ -f tools/ffmpeg ] && chmod +x tools/ffmpeg
          [ -f tools/ffprobe ] && chmod +x tools/ffprobe
          
      - name: Build and Package Application
        run: |
          cd src
          # Set CGO flags for macOS compatibility
          export CGO_CFLAGS="-mmacosx-version-min=10.12"
          export CGO_LDFLAGS="-mmacosx-version-min=10.12"
          # Build the application using fyne package (creates .app and .dmg)
          fyne package -os darwin -name "MetaRekordFixer"
        
      - name: Rename and prepare release files
        run: |
          cd src
          # Rename the created files to include architecture info
          mv MetaRekordFixer.app MetaRekordFixer-1.0.0-darwin-amd64.app
          mv MetaRekordFixer.dmg metarekordfixer-1.0.0-darwin-amd64.dmg
          
      - name: Upload installer to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd src
          gh release upload v1.0.0 "metarekordfixer-1.0.0-darwin-amd64.dmg" --clobber

  build-macos-arm:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.x'
          cache: true
          cache-dependency-path: src/go.sum
      
      - name: Install Fyne CLI
        run: go install fyne.io/tools/cmd/fyne@latest
      
      - name: Download FFmpeg and FFprobe for macOS ARM
        run: |
          mkdir -p tools
          # Ensure 7-Zip is available
          brew install --quiet p7zip
          
          # Download FFmpeg binary (Intel build runs on ARM via Rosetta 2)
          curl -L -o ffmpeg.7z https://evermeet.cx/ffmpeg/getrelease/7z
          # Extract FFmpeg (-y = assume Yes, -aoa = overwrite all)
          7z x ffmpeg.7z -otools/ -y -aoa
          
          # Download FFprobe binary separately (Intel build runs on ARM via Rosetta 2)
          curl -L -o ffprobe.7z https://evermeet.cx/ffmpeg/getrelease/ffprobe
          # Extract FFprobe (-y = assume Yes, -aoa = overwrite all)
          7z x ffprobe.7z -otools/ -y -aoa
          
          # Set executable permissions only for files that exist
          [ -f tools/ffmpeg ] && chmod +x tools/ffmpeg
          [ -f tools/ffprobe ] && chmod +x tools/ffprobe
          
      - name: Build and Package Application
        run: |
          cd src
          # Set CGO flags for macOS compatibility
          export CGO_CFLAGS="-mmacosx-version-min=10.12"
          export CGO_LDFLAGS="-mmacosx-version-min=10.12"
          # Build the application using fyne package (creates .app and .dmg)
          fyne package -os darwin -name "MetaRekordFixer"
        
      - name: Rename and prepare release files
        run: |
          cd src
          # Rename the created files to include architecture info
          mv MetaRekordFixer.app MetaRekordFixer-1.0.0-darwin-arm64.app
          mv MetaRekordFixer.dmg metarekordfixer-1.0.0-darwin-arm64.dmg
          
      - name: Upload installer to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd src
          gh release upload v1.0.0 "metarekordfixer-1.0.0-darwin-arm64.dmg" --clobber
